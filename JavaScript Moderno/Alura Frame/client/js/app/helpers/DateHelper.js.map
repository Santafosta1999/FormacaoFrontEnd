{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","reverse","map","item","indice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCACaA,U;AACT,sCAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACH;;;;kDACoBC,I,EAAM;AACvB;AACA,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACH;;;kDAEoBC,K,EAAO;AACxB;AACA,4BAAG,CAAC,wBAAwBC,IAAxB,CAA6BD,KAA7B,CAAJ,EACI,MAAM,IAAIL,KAAJ,CAAU,iCAAV,CAAN;AACJ;AACA,kEAAWO,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+B,UAACC,IAAD,EAAOC,MAAP;AAAA,mCAAkBD,OAAKC,SAAS,CAAhC;AAAA,yBAA/B,CAAnB;AACH","file":"DateHelper.js","sourcesContent":["//Classe com métodos estáticos para realizar a conversão e validação de datas\r\nexport class DateHelper {\r\n    constructor() {\r\n        throw new Error('DataHelper não pode ser instanciada');\r\n    }\r\n    static dataParaTexto(data) {\r\n        //Converte do padrão aaaa/mm/dd para dd/mm/aaaa\r\n        return `${data.getDate()}/${data.getMonth()+1}/${data.getFullYear()}`;\r\n    }\r\n\r\n    static textoParaData(texto) {\r\n        //if testa se a data está no padão correto\r\n        if(!/^\\d{2}\\/\\d{2}\\/\\d{4}$/.test(texto))\r\n            throw new Error('Deve estar no padrão dd/mm/aaaa');\r\n        //Converte do padrão dd/mm/aaaa para aaaa/mm/dd\r\n        return new Date(...texto.split('/').reverse().map((item, indice) => item-indice % 2));\r\n    }\r\n}"]}