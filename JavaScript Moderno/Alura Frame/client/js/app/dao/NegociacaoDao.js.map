{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;AAASA,gB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;+BAGIC,a;AACX,+BAAYC,UAAZ,EAAwB;AAAA;;AACtB,eAAKC,WAAL,GAAmBD,UAAnB;AACA,eAAKE,MAAL,GAAc,aAAd;AACD;;;;mCACQC,U,EAAY;AAAA;;AACnB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACC,CAAC,MAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,MAAKP,MAFN,EAGXQ,GAHW,CAGPP,UAHO,CAAd;;AAKAI,sBAAQI,SAAR,GAAoB,aAAK;AACvBN;AACD,eAFD;AAGAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,0CAAP;AACD,eAHD;AAID,aAbM,CAAP;AAcD;;;uCACY;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIY,SAAS,OAAKjB,WAAL,CACVO,WADU,CACE,CAAC,OAAKN,MAAN,CADF,EACiB,WADjB,EAEVO,WAFU,CAEE,OAAKP,MAFP,EAGViB,UAHU,EAAb;;AAKA,kBAAIC,cAAc,EAAlB;;AAEAF,qBAAOP,SAAP,GAAmB,aAAK;AACtB,oBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,oBAAGD,KAAH,EAAU;AACR,sBAAIE,OAAOF,MAAMG,KAAjB;AACAJ,8BAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,wBAAMQ,QAAN;AACD,iBAJD,MAIO;AACLxB,0BAAQe,WAAR;AACD;AACF,eAVD;AAWAF,qBAAON,OAAP,GAAiB,aAAK;AACpBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,yCAAP;AACD,eAHD;AAID,aAvBM,CAAP;AAwBD;;;uCACY;AAAA;;AACX,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,kBAAIC,UAAU,OAAKN,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGX4B,KAHW,EAAd;;AAKAvB,sBAAQI,SAAR,GAAoB;AAAA,uBAAKN,QAAQ,mCAAR,CAAL;AAAA,eAApB;AACAE,sBAAQK,OAAR,GAAkB,aAAK;AACrBC,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uBAAO,yCAAP;AACD,eAHD;AAID,aAXM,CAAP;AAYD","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from '../models/Negociacao';\r\n\r\n//Dao de Negociação para persistir os dados no IndexedDB\r\nexport class NegociacaoDao {\r\n  constructor(connection) {\r\n    this._connection = connection;\r\n    this._store = 'negociacoes';\r\n  }\r\n  adiciona(negociacao) {\r\n    return new Promise((resolve, reject) => {\r\n      let request = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .add(negociacao);\r\n\r\n      request.onsuccess = e => {\r\n        resolve();\r\n      };\r\n      request.onerror = e => {\r\n        console.log(e.target.error);\r\n        reject('Não foi possível adicionar a negociação.');\r\n      };\r\n    });\r\n  }\r\n  listaTodos() {\r\n    return new Promise((resolve, reject) => {\r\n      let cursor = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .openCursor();\r\n\r\n      let negociacoes = [];\r\n\r\n      cursor.onsuccess = e => {\r\n        let atual = e.target.result;\r\n\r\n        if(atual) {\r\n          let dado = atual.value;\r\n          negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n          atual.continue();\r\n        } else {\r\n          resolve(negociacoes);\r\n        }\r\n      };\r\n      cursor.onerror = e => {\r\n        console.log(e.target.error);\r\n        reject('Não foi possível listar as negociações.');\r\n      };\r\n    });\r\n  }\r\n  apagaTodos() {\r\n    return new Promise((resolve, reject) => {\r\n      let request = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .clear();\r\n\r\n      request.onsuccess = e => resolve('Negociações removidas com sucesso');\r\n      request.onerror = e => {\r\n        console.log(e.target.error);\r\n        reject('Não foi possível remover as negociações');\r\n      }\r\n    });\r\n  }\r\n}"]}